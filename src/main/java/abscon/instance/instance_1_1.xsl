<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $Header: /server/CVS/abscon/absconCVS4/src/abscon/instance/instance_1_1.xsl,v 1.1 2008/01/15 18:17:07 lecoutre Exp $ -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
  <xsl:output method="xml" indent="yes"/> 
<xsl:template match="instance">
<!-- <xsl:comment> This file has been generated by Abscon.For more information about its format, see http://www.cril.univ-artois.fr/~lecoutre </xsl:comment> -->
<instance>
<xsl:text>
  </xsl:text><xsl:apply-templates select="presentation | domains | variables | relations | predicates | constraints"/>
</instance>
</xsl:template>

<xsl:template match="presentation">
   <presentation>
      <xsl:attribute name="name"><xsl:value-of select="@name"/></xsl:attribute>
      <xsl:attribute name="description"><xsl:value-of select="@description"/></xsl:attribute>
      <xsl:attribute name="nbSolutions"><xsl:value-of select="@nbSolutions"/></xsl:attribute>      
      <xsl:if test="string-length(@solution) != 0">
      <xsl:attribute name="solution"><xsl:value-of select="@solution"/></xsl:attribute>
      </xsl:if>
      <xsl:attribute name="format"><xsl:value-of select="@format"/></xsl:attribute>
    </presentation><xsl:text>
  </xsl:text>
</xsl:template>

<xsl:template match="variables">
  <xsl:text>
  
  </xsl:text><variables>
      <xsl:attribute name="nbVariables"><xsl:value-of select="@nbVariables"/></xsl:attribute>
      <xsl:apply-templates select="variable"/>
    <xsl:text>
  </xsl:text></variables>
</xsl:template>
    
<xsl:template match="variable">
   <xsl:text>
    </xsl:text><variable>
      <xsl:attribute name="name"><xsl:value-of select="@name"/></xsl:attribute>
      <xsl:attribute name="domain"><xsl:value-of select="@domain"/></xsl:attribute>
    </variable>
</xsl:template>

<xsl:template match="domains">
    <xsl:text>    
  </xsl:text><domains> 
      <xsl:attribute name="nbDomains"><xsl:value-of select="@nbDomains"/></xsl:attribute>
      <xsl:apply-templates select="domain"/>
    <xsl:text>
  </xsl:text></domains>
</xsl:template>

<xsl:template match="domain">
   <xsl:text>
    </xsl:text><domain>
      <xsl:attribute name="name"><xsl:value-of select="@name"/></xsl:attribute>   
      <xsl:attribute name="nbValues"><xsl:value-of select="@nbValues"/></xsl:attribute>
      <xsl:attribute name="values"><xsl:value-of select="@values"/></xsl:attribute>
    </domain>
</xsl:template>

<xsl:template match="relations">
<xsl:text>   
 
  </xsl:text>
<relations> 
      <xsl:attribute name="nbRelations"><xsl:value-of select="@nbRelations"/></xsl:attribute>
      <xsl:apply-templates select="relation"/>
<xsl:text>
  </xsl:text>
</relations>
</xsl:template>

<xsl:template match="relation">
   <xsl:text>
    </xsl:text><relation>
      <xsl:attribute name="name"><xsl:value-of select="@name"/></xsl:attribute>
      <xsl:attribute name="domain"><xsl:value-of select="@domain"/></xsl:attribute>
      
      <xsl:if test="string-length(@nbSupports) != 0">
        <xsl:attribute name="nbSupports"><xsl:value-of select="@nbSupports"/></xsl:attribute>
        <xsl:attribute name="supports"><xsl:value-of select="@supports"/></xsl:attribute>
      </xsl:if>            
      
      <xsl:if test="string-length(@nbConflicts) != 0">
        <xsl:attribute name="nbConflicts"><xsl:value-of select="@nbConflicts"/></xsl:attribute>
        <xsl:attribute name="conflicts"><xsl:value-of select="@conflicts"/></xsl:attribute>
      </xsl:if>
                
    </relation>
</xsl:template>

<xsl:template match="predicates">
  <xsl:text>
  
  </xsl:text><predicates> 
      <xsl:attribute name="nbPredicates"><xsl:value-of select="@nbPredicates"/></xsl:attribute>
      <xsl:apply-templates select="predicate"/>
  <xsl:text>
  </xsl:text>
</predicates>
</xsl:template>

<xsl:template match="predicate">
   <xsl:text>
    </xsl:text><predicate>
      <xsl:attribute name="name"><xsl:value-of select="@name"/></xsl:attribute>
      <!-- <xsl:attribute name="domain"><xsl:value-of select="@domain"/></xsl:attribute> -->
      <xsl:attribute name="expression"><xsl:value-of select="@expression"/></xsl:attribute>            
    </predicate>
</xsl:template>



<xsl:template match="constraints">
    <xsl:text>
    
  </xsl:text><constraints>
      <xsl:attribute name="nbConstraints"><xsl:value-of select="@nbConstraints"/></xsl:attribute>
      <xsl:apply-templates select="constraint"/>
    <xsl:text>
  </xsl:text></constraints>
</xsl:template>
    
<xsl:template match="constraint">
   <xsl:text>
    </xsl:text><constraint>
      <xsl:attribute name="name"><xsl:value-of select="@name"/></xsl:attribute>
      <xsl:attribute name="scope"><xsl:value-of select="@scope"/></xsl:attribute>
      <xsl:if test="string-length(@predicate) != 0">
      <xsl:attribute name="predicate"><xsl:value-of select="@predicate"/></xsl:attribute>
      </xsl:if>
      <xsl:if test="string-length(@relation) != 0">
      <xsl:attribute name="relation"><xsl:value-of select="@relation"/></xsl:attribute>
      </xsl:if>
    </constraint>
</xsl:template>
</xsl:stylesheet>


