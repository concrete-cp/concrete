OpenIDE-Module-Display-Category=Plugin
OpenIDE-Module-Long-Description=\
    <p>Force-Directed layout algorithm for real-world large-scale undirected graphs.\
    </p>\n\n<p>It is one of the few force-directed layout algorithms that can scale to over 1 million nodes, making it ideal for large graphs. \
    However, small graphs (hundreds or less) do not always end up looking so good. \
    This algorithm expects undirected weighted graphs and aims to better distinguish clusters. \
    It can be run in parallel to speed up computing.\
    </p>\n\n<p>The algorithm is originally based on Frutcherman-Reingold and works with a fixed number of iterations. \
    The algorithm is using simulated annealing and has five different phases: liquid, expansion, cool-down, crunch, and simmer. \
    Each stage is a fraction of the total iterations and several parameters like temperature, attraction and damping are changing. \
    The default schedule spends approximately 25% of its time in the liquid stage, 25% in the expansion stage, 25% in the cool-down stage, 10% in the crunch stage, and 15% in the simmer stage.\
    </p>\n\n<p>The original OpenOrd C++ implementation is available at the following address : <a href="http://www.cs.sandia.gov/~smartin/software.html">http://www.cs.sandia.gov/~smartin/software.html</a>. \
    This plug-in version doesn't include the multi-level version of the algorithm. \
    The algorithm was formerly known as DrL, and before that VxOrd.\
    </p>\n\n<h3>Parallel</h3>\n\n<p>OpenOrd can be run in parallel to speed up computation. \
    Each thread will work on a subset of the nodes of the graph. \
    It's recommended to put the number of core minus 1 to keep a thread for display. \
    For example on a quad-core computer, it's good to use three threads.\
    </p>\n\n<h3>Edge-Cutting</h3>\n\n<p>Edge-cutting in OpenOrd is specified using a fraction from 0 to 1. \
    An edge-cutting value of 0 corresponds to the standard Frutcherman-Reingold layout algorithm (no cutting), while an edge-cutting value of 1 corresponds to aggressive cutting. \
    Aggressive cutting promotes clustering but will not cut every edge. \
    The default value for edge-cutting in OpenOrd is 0.8.\
    </p>\n\n<h3>Reference</h3>\n\nS. \
    Martin, W. \
    M. \
    Brown, R. \
    Klavans, and K. \
    Boyack (to appear, 2011), "OpenOrd: An Open-Source Toolbox for Large Graph Layout," SPIE Conference on Visualization and Data Analysis (VDA).\n\n\
    <h3>Versions</h3>\n<p>* 0.4 : Configure time spent in each stage (liquid, expansion, cool-down, crunch and simmer)</p>\n<p>* 0.3 : First plugin release</p>
OpenIDE-Module-Name=OpenOrdLayout

OpenIDE-Module-Short-Description=Parallel layout algorithm for real-world large-scale undirected graphs


OpenOrd.description = Force-Directed layout algorithm for real-world large-scale undirected graphs. Can scale to over 1 million nodes, making it ideal for large graphs. However, small graphs (hundreds or less) do not always end up looking so good. This algorithm expects undirected weighted graphs and aims to better distinguish clusters.

OpenOrd.properties.edgecut.name = Edge Cut
OpenOrd.properties.edgecut.description = 0 means no cutting and 1 maximum cutting. A higher cutting means a more clustered result.

OpenOrd.properties.numthreads.name = Num Threads
OpenOrd.properties.numthreads.description = The number of threads to use to run the algorithm. Increase this number for multi-core computers. It's recommened to put the number of core minus 1 to keep a thread for display.

OpenOrd.properties.numiterations.name = Num Iterations
OpenOrd.properties.numiterations.description = Increase this number only for very large graphs. More iterations, more time it takes and less dense the result will be. Minimum is 100 iterations, and default is 750.

OpenOrd.properties.seed.name = Random seed
OpenOrd.properties.seed.description = The result of the algorithm depends on the seed, the number of iterations and the number of threads.

OpenOrd.properties.realtime.name = Fixed time
OpenOrd.properties.realtime.description = When some nodes are fixed (Right-click rectangle selection > Settle), it configures the time the fixed nodes will not move. 0 means they will not be fixed and 1 they will remain fixed.

OpenOrd.properties.stage.liquid.name = Liquid (%)
OpenOrd.properties.stage.liquid.description = Percentage of the time spent in the liquid stage

OpenOrd.properties.stage.expansion.name = Expansion (%)
OpenOrd.properties.stage.expansion.description = Percentage of the time spent in the expansion stage

OpenOrd.properties.stage.cooldown.name = Cooldown (%)
OpenOrd.properties.stage.cooldown.description = Percentage of the time spent in the cooldown stage

OpenOrd.properties.stage.crunch.name = Crunch (%)
OpenOrd.properties.stage.crunch.description = Percentage of the time spent in the crunch stage

OpenOrd.properties.stage.simmer.name = Simmer (%)
OpenOrd.properties.stage.simmer.description = Percentage of the time spent in the simmer stage
